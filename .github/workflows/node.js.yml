# This workflow will do a clean installation of node dependencies, cache/restore them,
# build the source code and run tests across different versions of node.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ['main']

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Install Node.js dependencies
      - run: npm ci

      # Install Miniconda
      - name: Install Miniconda
        run: |
          # Download and install Miniconda
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
          bash miniconda.sh -b -u -p $HOME/miniconda

          # Initialize Conda and update it
          eval "$($HOME/miniconda/bin/conda shell.bash hook)"
          conda init
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda

          # Clean up unnecessary cache and packages to save disk space
          conda clean --all

      # Create and activate Conda environment
      - name: Set up Conda environment
        run: |
          # Initialize Conda in this shell session
          eval "$($HOME/miniconda/bin/conda shell.bash hook)"

          # Create a new Conda environment named 'myenv' with Python 3.11
          conda create -n myenv python=3.11

          # Activate the created environment
          conda activate myenv

          # Clean up unnecessary cache and files after creating the environment
          conda clean --all

      # Install Python dependencies (if requirements.txt exists)
      - name: Install Python dependencies
        run: |
          # Initialize Conda in this shell session
          eval "$($HOME/miniconda/bin/conda shell.bash hook)"

          # Activate the environment
          conda activate myenv

          # Install Python dependencies from requirements.txt if it exists
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Restart PM2 service for BackendAPI
      - run: pm2 restart BackendAPI
